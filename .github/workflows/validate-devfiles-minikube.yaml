#
# Copyright (c) 2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
name: Validate Devfiles

on:
  push:
    branches: [ 244-2 ]
  pull_request:
    branches: [ 244-2 ]

jobs:

  # test_minikube:
  #   name: Test Minikube
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v1
  #   - name: Setup Minikube
  #     uses: manusa/actions-setup-minikube@v2.4.2
  #     with:
  #       minikube version: 'v1.21.0'
  #       kubernetes version: 'v1.21.0'
  #       driver: 'docker'
  #       github token: ${{ secrets.GITHUB_TOKEN }}
  #       start args: '--addons=ingress'
  #   - name: Install CLI tools
  #     uses: redhat-actions/openshift-tools-installer@v1
  #     with:
  #       # Installs the latest release of odo
  #       odo: "latest"
  #   - name: Validate the devfile stacks
  #     run: tests/test.sh odo
  check_architectures:
    name: Check Stack and Sample Architectures
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install yq command
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        source: "github"
        github_pat: ${{ secrets.GITHUB_TOKEN }}
        # Installs the latest release of yq
        yq: "latest"
    - name: Check stacks and samples
      continue-on-error: true
      # Redirect test output to a file because github steps dont exec commands
      # following an error command in multi-line commands for steps[*].run
      run: tests/check_architectures.sh yq >> output.txt
    - name: Save test output
      id: save
      run: |
          body=$(cat output.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          echo $body
          echo "::set-output name=body::$body"
    - name: Create comment for PRs
      if: ${{ github.event_name == 'pull_request' }}
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          This comment was written by the github action!
          Please check if your stack/sample devfile has architectures.
          It is good practice to write the architectures supported by the stack/sample devfile.

          ${{ steps.save.outputs.body }}
